{"version":3,"sources":["components/NavLinks/styles.module.scss","components/ThemeToggleButton/ThemeToggleButton.js","components/NavLinks/NavLinks.js","components/Nav/Nav.js","redux/favoritesSlice.js","redux/citySlice.js","components/FutureWeather/FutureWeather.js","components/CitySearchInput/CitySearchInput.js","components/Homepage/Homepage.js","components/Favorites/Favorites.js","App.js","redux/store.js","index.js","components/Homepage/styles.module.scss","components/FutureWeather/styles.module.scss","components/Nav/styles.module.scss","components/ThemeToggleButton/styles.module.scss"],"names":["module","exports","ThemeToggleButton","useContext","ThemeContext","isDarkMode","toggleMode","modeButtonContent","className","styles","modeDiv","size","modeButton","onClick","NavLinks","navlinks","to","Nav","nav","logo","favoritesSlice","createSlice","name","initialState","reducers","add","state","action","push","payload","remove","index","findIndex","city","id","splice","actions","citySlice","setCity","cityName","country","FutureWeather","props","useState","weeklyWeather","setWeeklyWeather","useSelector","getFiveDaysWeather","cityKey","a","days","stringDay","weeklyArr","axios","get","process","then","res","data","DailyForecasts","i","length","Date","getDay","undefined","day","minTempCelsius","Math","round","Temperature","Minimum","Value","maxTempCelsius","Maximum","catch","err","console","warn","minTempFahrenheit","maxTempFahrenheit","useEffect","fetchData","futureData","map","e","futureWeatherBox","tempScale","CitySearchInput","citiesOptions","setCitiesOptions","dispatch","useDispatch","onInputChangeHandler","event","value","query","test","newOptionsArr","forEach","element","LocalizedName","Country","Key","key","setOpenErrorToast","Autocomplete","disablePortal","onInputChange","v","onChange","options","getOptionLabel","option","sx","width","renderInput","params","TextField","label","Homepage","favoriteCities","favorites","cityData","openErrorToast","setTempScale","currentWeather","setCurrentWeather","getDefaultCity","AdministrativeArea","getCityWeather","celsius","Metric","fahrenheit","Imperial","text","WeatherText","isInFavorites","handleClose","reason","searchWrappper","Snackbar","open","autoHideDuration","onClose","Alert","severity","weatherBoxDark","weatherBox","favoritesToggleButton","existsInFavorites","temperature","CircularProgress","FormControl","RadioGroup","row","target","FormControlLabel","control","Radio","Favorites","top","cascade","favoriteClicked","style","color","fontWeight","createContext","App","setIsDarkMode","Provider","prevMode","exact","path","component","store","configureStore","reducer","favoritesReducer","cityReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c1b38a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlinks\":\"styles_navlinks__JEwNa\"};","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../App\";\r\n\r\nimport { CgSun } from \"react-icons/cg\";\r\nimport { HiMoon } from \"react-icons/hi\";\r\n\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst ThemeToggleButton = () => {\r\n  const { isDarkMode, toggleMode } = useContext(ThemeContext);\r\n\r\n  const modeButtonContent = (\r\n    <div className={styles.modeDiv}>\r\n      {isDarkMode ? <CgSun size={20} /> : <HiMoon size={20} />}\r\n      {isDarkMode ? <span>Light mode</span> : <span>Dark mode</span>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <button className={styles.modeButton} onClick={toggleMode}>\r\n      {modeButtonContent}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ThemeToggleButton from \"../ThemeToggleButton/ThemeToggleButton\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst NavLinks = () => {\r\n  return (\r\n    <div className={styles.navlinks}>\r\n      <ul>\r\n        <Link to=\"/Or-Arbel-21-02-22/\">\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link to=\"/favorites/\">\r\n          <li>Favorites</li>\r\n        </Link>\r\n      </ul>\r\n      <ThemeToggleButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport { TiWeatherPartlySunny } from \"react-icons/ti\";\r\n\r\nimport styles from \"./styles.module.scss\";\r\nimport NavLinks from \"../NavLinks/NavLinks\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.logo}>\r\n        <TiWeatherPartlySunny size={20} />\r\n        <span>Weather</span>\r\n      </div>\r\n      <NavLinks />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nexport const favoritesSlice = createSlice({\r\n  name: \"favorites\",\r\n  initialState,\r\n  reducers: {\r\n    add: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    remove: (state, action) => {\r\n      const index = state.findIndex((city) => city.id === action.payload.id);\r\n      state.splice(index, 1);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { add, remove } = favoritesSlice.actions;\r\nexport default favoritesSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {};\r\n\r\n// before the Geolocation task the initialState was:\r\n// const initialState = {\r\n//   cityName: \"Tel Aviv\",\r\n//   country: \"Israel\",\r\n//   id: 215854,\r\n// };\r\n\r\nconst citySlice = createSlice({\r\n  name: \"city\",\r\n  initialState,\r\n  reducers: {\r\n    setCity: (state, action) => {\r\n      state.cityName = action.payload.cityName;\r\n      state.country = action.payload.country;\r\n      state.id = action.payload.id;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCity } = citySlice.actions;\r\nexport default citySlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nconst FutureWeather = (props) => {\r\n  const [weeklyWeather, setWeeklyWeather] = useState([]);\r\n  const city = useSelector((state) => state.city);\r\n\r\n  const getFiveDaysWeather = async (cityKey) => {\r\n    const days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    let stringDay = \"\";\r\n    let weeklyArr = weeklyWeather ?? [];\r\n\r\n    await axios\r\n      .get(\r\n        `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${process.env.REACT_APP_API_KEY}&metric=true`\r\n      )\r\n      .then((res) => res.data.DailyForecasts)\r\n      .then((res) => {\r\n        for (let i = 0; i < res.length; i++) {\r\n          stringDay = days[new Date(res[i].Date).getDay()];\r\n          if (weeklyArr[i] === undefined) {\r\n            weeklyArr[i] = { day: stringDay };\r\n          }\r\n          weeklyArr[i].minTempCelsius = Math.round(\r\n            res[i].Temperature.Minimum.Value\r\n          );\r\n          weeklyArr[i].maxTempCelsius = Math.round(\r\n            res[i].Temperature.Maximum.Value\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n\r\n    await axios\r\n      .get(\r\n        `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}?apikey=${process.env.REACT_APP_API_KEY}&metric=false`\r\n      )\r\n      .then((res) => res.data.DailyForecasts)\r\n      .then((res) => {\r\n        for (let i = 0; i < res.length; i++) {\r\n          stringDay = days[new Date(res[i].Date).getDay()];\r\n          weeklyArr[i].minTempFahrenheit = Math.round(\r\n            res[i].Temperature.Minimum.Value\r\n          );\r\n          weeklyArr[i].maxTempFahrenheit = Math.round(\r\n            res[i].Temperature.Maximum.Value\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n\r\n    setWeeklyWeather(weeklyArr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (city && city.id) {\r\n        await getFiveDaysWeather(city.id);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [city]);\r\n\r\n  const showData = () => {\r\n    return weeklyWeather.map((e, i) => {\r\n      return (\r\n        <div className={styles.futureWeatherBox} key={i}>\r\n          <div className={styles.day}>{e.day}</div>\r\n          <p>\r\n            <br />\r\n            {props.tempScale === \"celsius\" && e.minTempCelsius !== undefined && (\r\n              <>\r\n                {e.minTempCelsius}°C / {e.maxTempCelsius}°C\r\n              </>\r\n            )}\r\n            {props.tempScale === \"fahrenheit\" &&\r\n              e.minTempFahrenheit !== undefined && (\r\n                <>\r\n                  {e.minTempFahrenheit}°F / {e.maxTempFahrenheit}°F\r\n                </>\r\n              )}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.futureData} key={city.id}>\r\n      {showData()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FutureWeather;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCity } from \"../../redux/citySlice\";\r\n\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst CitySearchInput = (props) => {\r\n  const [citiesOptions, setCitiesOptions] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const getOptions = (query) => {\r\n    axios\r\n      .get(\r\n        `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${query}`\r\n      )\r\n      .then((res) => res.data)\r\n      .then((res) => {\r\n        if (res) {\r\n          let newOptionsArr = [];\r\n          res.forEach((element) => {\r\n            newOptionsArr.push({\r\n              cityName: element.LocalizedName,\r\n              country: element.Country.LocalizedName,\r\n              id: element.Key,\r\n              key: element.Key,\r\n            });\r\n          });\r\n          setCitiesOptions(newOptionsArr);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  };\r\n\r\n  const onInputChangeHandler = (event, value) => {\r\n    if (value == \"\") {\r\n      setCitiesOptions([]);\r\n    }\r\n    const regex = /^[a-zA-Z\\s]*$/;\r\n    if (!regex.test(value)) {\r\n      props.setOpenErrorToast(true);\r\n    } else {\r\n      getOptions(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        disablePortal\r\n        id=\"citiesSearch\"\r\n        onInputChange={(e, v) => onInputChangeHandler(e, v)}\r\n        onChange={(e, v) => {\r\n          if (v !== null) {\r\n            dispatch(setCity(v));\r\n            setCitiesOptions([]);\r\n          }\r\n        }}\r\n        options={citiesOptions}\r\n        getOptionLabel={(option) => option.cityName}\r\n        sx={{ width: 300 }}\r\n        renderInput={(params) => <TextField {...params} label=\"Search City\" />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CitySearchInput;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BsSuitHeart, BsSuitHeartFill } from \"react-icons/bs\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { add, remove } from \"../../redux/favoritesSlice\";\r\nimport { setCity } from \"../../redux/citySlice\";\r\nimport { ThemeContext } from \"../../App\";\r\nimport FutureWeather from \"../FutureWeather/FutureWeather\";\r\nimport CitySearchInput from \"../CitySearchInput/CitySearchInput\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nfunction Homepage() {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const favoriteCities = useSelector((state) => state.favorites);\r\n  const cityData = useSelector((state) => state.city);\r\n  const dispatch = useDispatch();\r\n\r\n  const [openErrorToast, setOpenErrorToast] = useState(false);\r\n  const [tempScale, setTempScale] = useState(\"celsius\");\r\n\r\n  const [currentWeather, setCurrentWeather] = useState({});\r\n\r\n  const getDefaultCity = async () => {\r\n    let response = await axios\r\n      .get(\r\n        `http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${process.env.REACT_APP_API_KEY}&q=32.109333,34.855499`\r\n      )\r\n      .then((res) => {\r\n        dispatch(\r\n          setCity({\r\n            cityName: res.data.AdministrativeArea.LocalizedName,\r\n            country: res.data.Country.LocalizedName,\r\n            id: res.data.Key,\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n        /*\r\n        error logic\r\n        */\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!cityData.id) {\r\n      getDefaultCity();\r\n    }\r\n  }, []);\r\n\r\n  const getCityWeather = async (cityKey) => {\r\n    axios\r\n      .get(\r\n        `http://dataservice.accuweather.com/currentconditions/v1/${cityKey}?apikey=${process.env.REACT_APP_API_KEY}`\r\n      )\r\n      .then((res) => res.data[0])\r\n      .then((res) => {\r\n        setCurrentWeather({\r\n          celsius: Math.round(res.Temperature.Metric.Value),\r\n          fahrenheit: Math.round(res.Temperature.Imperial.Value),\r\n          text: res.WeatherText,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (cityData.id) {\r\n        await getCityWeather(cityData.id);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [cityData]);\r\n\r\n  const isInFavorites = () => {\r\n    for (let i = 0; i < favoriteCities.length; i++) {\r\n      if (favoriteCities[i].id === cityData.id) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const favoriteToggleHandler = (existsInFavorites) => {\r\n    if (existsInFavorites === true) {\r\n      dispatch(remove(cityData));\r\n    } else {\r\n      dispatch(\r\n        add({\r\n          cityName: cityData.cityName,\r\n          country: cityData.country,\r\n          id: cityData.id,\r\n          celsius: currentWeather.celsius,\r\n          fahrenheit: currentWeather.fahrenheit,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenErrorToast(false);\r\n  };\r\n\r\n  return (\r\n    <Fade>\r\n      <div>\r\n        <div className={styles.searchWrappper}>\r\n          <CitySearchInput setOpenErrorToast={setOpenErrorToast} />\r\n        </div>\r\n\r\n        <Snackbar\r\n          open={openErrorToast}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n        >\r\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }}>\r\n            Please use English characters only.\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <div className={isDarkMode ? styles.weatherBoxDark : styles.weatherBox}>\r\n          <div className={styles.cityData}>\r\n            {cityData.id && currentWeather.celsius ? (\r\n              <>\r\n                {cityData.cityName}, {cityData.country}\r\n                <button\r\n                  className={styles.favoritesToggleButton}\r\n                  onClick={() => {\r\n                    favoriteToggleHandler(isInFavorites());\r\n                  }}\r\n                >\r\n                  {isInFavorites() ? (\r\n                    <BsSuitHeartFill size={20} />\r\n                  ) : (\r\n                    <BsSuitHeart size={20} />\r\n                  )}\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n          <div className={styles.temperature}>\r\n            {cityData.id && currentWeather.celsius ? (\r\n              <>\r\n                <h1>\r\n                  {tempScale === \"celsius\"\r\n                    ? currentWeather.celsius + \"°C\"\r\n                    : currentWeather.fahrenheit + \"°F\"}\r\n                </h1>\r\n                <h3>{currentWeather.text}</h3>\r\n              </>\r\n            ) : (\r\n              <CircularProgress />\r\n            )}\r\n          </div>\r\n\r\n          <FormControl>\r\n            <RadioGroup\r\n              row\r\n              aria-labelledby=\"radio-buttons-group\"\r\n              value={tempScale}\r\n              name=\"radio-buttons-group\"\r\n              onChange={(e) => setTempScale(e.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"celsius\"\r\n                control={<Radio />}\r\n                label=\"Celsius\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"fahrenheit\"\r\n                control={<Radio />}\r\n                label=\"Fahrenheit\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <p>\r\n            ☀ Wherever you go, no matter what the weather, always bring your own\r\n            sunshine. ☀\r\n          </p>\r\n        </div>\r\n\r\n        <FutureWeather tempScale={tempScale} cityKey={cityData.id} />\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { remove } from \"../../redux/favoritesSlice\";\r\nimport { setCity } from \"../../redux/citySlice\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { ThemeContext } from \"../../App\";\r\n\r\nfunction Favorites() {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const favoriteCities = useSelector((state) => state.favorites);\r\n  const dispatch = useDispatch();\r\n\r\n  const favoriteClicked = (e) => {\r\n    dispatch(\r\n      setCity({\r\n        cityName: e.cityName,\r\n        country: e.country,\r\n        id: e.id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fade top cascade>\r\n      <div>\r\n        <h1 className={isDarkMode ? \"darkTitle\" : \"lightTitle\"}>\r\n          Favorite cities\r\n        </h1>\r\n        {favoriteCities.length > 0 ? (\r\n          favoriteCities.map((e, i) => {\r\n            return (\r\n              <div className=\"favorite-container\" key={i}>\r\n                <button\r\n                  className=\"removeBtn\"\r\n                  onClick={() => dispatch(remove(e))}\r\n                >\r\n                  Remove\r\n                </button>\r\n                <Link\r\n                  to=\"/\"\r\n                  className=\"favorite-div\"\r\n                  onClick={() => favoriteClicked(e)}\r\n                >\r\n                  <div>\r\n                    {e.cityName}, {e.country}\r\n                  </div>\r\n                  <div style={{ color: \"white\" }}>\r\n                    {e.celsius} °C | {e.fahrenheit} °F\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <>\r\n            <p style={{ color: isDarkMode ? \"white\" : \"black\" }}>\r\n              <span style={{ fontWeight: \"bold\" }}>No favorites yet.</span>\r\n              <br />\r\n              Keep track of the cities you're interested in by clicking 'Add to\r\n              favorites'\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { useState, createContext } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Homepage from \"./components/Homepage/Homepage\";\r\nimport Favorites from \"./components/Favorites/Favorites\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nfunction App() {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const toggleMode = () => {\r\n    setIsDarkMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleMode }}>\r\n      <Router>\r\n        <div className={isDarkMode ? \"darkApp\" : \"app\"}>\r\n          <Nav />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/Or-Arbel-21-02-22/\"\r\n              component={() => {\r\n                return <Homepage />;\r\n              }}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/favorites/\"\r\n              component={() => {\r\n                return <Favorites />;\r\n              }}\r\n            />\r\n            <Redirect to=\"/Or-Arbel-21-02-22/\" />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport favoritesReducer from \"./favoritesSlice\";\r\nimport cityReducer from \"./citySlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    favorites: favoritesReducer,\r\n    city: cityReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrappper\":\"styles_searchWrappper__5VjtL\",\"weatherBox\":\"styles_weatherBox__2Fizj\",\"weatherBoxDark\":\"styles_weatherBoxDark__1-gye\",\"cityData\":\"styles_cityData__1mwj2\",\"favoritesToggleButton\":\"styles_favoritesToggleButton__2xKl-\",\"temperature\":\"styles_temperature__3ZAa1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"futureData\":\"styles_futureData__3oYYO\",\"futureWeatherBox\":\"styles_futureWeatherBox__3byCi\",\"day\":\"styles_day__1GjBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__2AghU\",\"logo\":\"styles_logo__5iaj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modeButton\":\"styles_modeButton__15I55\",\"modeDiv\":\"styles_modeDiv__nzAtT\"};"],"sourceRoot":""}